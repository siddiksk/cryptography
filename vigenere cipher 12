#include <stdio.h>
#include <string.h>
#include <ctype.h>

void encrypt(char *plaintext, char *key);
void decrypt(char *ciphertext, char *key);

int main() {
    char plaintext[1000], key[100];    
    printf("Enter the plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);    
    printf("Enter the key: ");
    fgets(key, sizeof(key), stdin);    
    plaintext[strcspn(plaintext, "\n")] = '\0';
    key[strcspn(key, "\n")] = '\0';   
    encrypt(plaintext, key);
    printf("Encrypted text: %s\n", plaintext);   
    decrypt(plaintext, key);
    printf("Decrypted text: %s\n", plaintext);    
    return 0;
}

void encrypt(char *plaintext, char *key) {
    int i, j;
    for (i = 0, j = 0; i < strlen(plaintext); ++i) {
        if (isalpha(plaintext[i])) {
            int shift = tolower(key[j % strlen(key)]) - 'a';
            
            if (islower(plaintext[i])) {
                plaintext[i] = 'a' + (plaintext[i] - 'a' + shift) % 26;
            } else {
                plaintext[i] = 'A' + (plaintext[i] - 'A' + shift) % 26;
            }
            
            ++j;
        }
    }
}

void decrypt(char *ciphertext, char *key) {
    int i, j;
    for (i = 0, j = 0; i < strlen(ciphertext); ++i) {
        if (isalpha(ciphertext[i])) {
            int shift = tolower(key[j % strlen(key)]) - 'a';            
            if (islower(ciphertext[i])) {
                ciphertext[i] = 'a' + (ciphertext[i] - 'a' - shift + 26) % 26;
            } else {
                ciphertext[i] = 'A' + (ciphertext[i] - 'A' - shift + 26) % 26;
            }
            
            ++j;
        }
    }
}
